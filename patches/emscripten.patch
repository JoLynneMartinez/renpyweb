diff --git a/tools/system_libs.py b/tools/system_libs.py
index 11fe8646f..02a772513 100755
--- a/tools/system_libs.py
+++ b/tools/system_libs.py
@@ -63,7 +63,8 @@ def dir_is_newer(dir_a, dir_b):
   assert os.path.exists(dir_b)
   newest_a = max([os.path.getmtime(x) for x in get_all_files_under(dir_a)])
   newest_b = max([os.path.getmtime(x) for x in get_all_files_under(dir_b)])
-  return newest_a < newest_b
+  # https://github.com/emscripten-core/emscripten/issues/9342
+  return newest_a > newest_b
 
 
 def get_cflags(force_object_files=False):
diff --git a/src/library_html5.js b/src/library_html5.js
index 76b3a8acd..165befdb3 100644
--- a/src/library_html5.js
+++ b/src/library_html5.js
@@ -6,10 +6,6 @@
 
 var LibraryJSEvents = {
   $JSEvents: {
-
-/* We do not depend on the exact initial values of falsey member fields - these fields can be populated on-demand
-   to save code size.
-   (but still documented here to keep track of what is supposed to be present)
     // pointers to structs malloc()ed to Emscripten HEAP for JS->C interop.
     keyEvent: 0,
     mouseEvent: 0,
@@ -38,14 +34,6 @@ var LibraryJSEvents = {
     // Track in this field whether we have yet registered that __ATEXIT__ handler.
     removeEventListenersRegistered: false, 
 
-#if HTML5_SUPPORT_DEFERRING_USER_SENSITIVE_REQUESTS
-    // If positive, we are currently executing in a JS event handler.
-    inEventHandler: 0,
-    // If we are in an event handler, specifies the event handler object from the eventHandlers array that is currently running.
-    currentEventHandler: null,
-#endif
-*/
-
     removeAllEventListeners: function() {
       for(var i = JSEvents.eventHandlers.length-1; i >= 0; --i) {
         JSEvents._removeHandler(i);
@@ -123,6 +111,12 @@ var LibraryJSEvents = {
         call.targetFunction.apply(null, call.argsList);
       }
     },
+
+    // https://github.com/emscripten-core/emscripten/issues/11515
+    // If positive, we are currently executing in a JS event handler.
+    inEventHandler: 0,
+    // If we are in an event handler, specifies the event handler object from the eventHandlers array that is currently running.
+    currentEventHandler: null,
 #endif
 
     // Stores objects representing each currently registered JS event handler.
