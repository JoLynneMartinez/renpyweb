Index: renpy/module/setuplib.py
===================================================================
--- renpy.orig/module/setuplib.py
+++ renpy/module/setuplib.py
@@ -316,6 +316,15 @@ def cython(name, source=[], libs=[], inc
                 fn,
                 "-o",
                 c_fn])
+            # Fix-up source for static loading
+            if len(split_name) > 1:
+                parent_module = '.'.join(split_name[:-1])
+                parent_module_identifier = parent_module.replace('.', '_')
+                with open(c_fn, 'r') as f: ccode = f.read()
+                ccode = re.sub('Py_InitModule4\("([^"]+)"', 'Py_InitModule4("'+parent_module+'.\\1"', ccode)
+                ccode = re.sub('^__Pyx_PyMODINIT_FUNC init', '__Pyx_PyMODINIT_FUNC init'+parent_module_identifier+'_', ccode, 0, re.MULTILINE)  # Cython 0.28.2
+                ccode = re.sub('^PyMODINIT_FUNC init', 'PyMODINIT_FUNC init'+parent_module_identifier+'_', ccode, 0, re.MULTILINE)  # Cython 0.25.2
+                with open(c_fn, 'w') as f: f.write(ccode)
 
         except subprocess.CalledProcessError, e:
             print()
Index: renpy/renpy/__init__.py
===================================================================
--- renpy.orig/renpy/__init__.py
+++ renpy/renpy/__init__.py
@@ -318,8 +318,9 @@ def update_path(package):
     name = package.__name__.split(".")
 
     import _renpy
-    libexec = os.path.dirname(_renpy.__file__)
-    package.__path__.append(os.path.join(libexec, *name))
+    if hasattr(_renpy, '__file__'):  # .so/.dll
+        libexec = os.path.dirname(_renpy.__file__)
+        package.__path__.append(os.path.join(libexec, *name))
 
     # Also find encodings, to deal with the way py2exe lays things out.
     import encodings
